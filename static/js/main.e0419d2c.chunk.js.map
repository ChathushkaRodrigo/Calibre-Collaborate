{"version":3,"sources":["Config.ts","GraphService.ts","AppContext.tsx","ErrorMessage.tsx","NavBar.tsx","Welcome.tsx","CalendarDayRow.tsx","Calendar.tsx","NewEvent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["config","appId","redirectUri","scopes","graphClient","undefined","ensureClient","authProvider","Client","initWithMiddleware","getUser","a","api","select","get","user","getUserWeekCalendar","timeZone","now","Date","startDateTime","zonedTimeToUtc","startOfWeek","toISOString","endDateTime","endOfWeek","header","query","orderby","top","response","events","options","headers","pageIterator","PageIterator","event","push","iterate","value","createEvent","newEvent","post","appContext","createContext","error","signIn","signOut","displayError","clearError","useAppContext","useContext","ProvideAppContext","children","auth","useState","setUser","setError","msal","useMsal","message","debug","AuthCodeMSALBrowserAuthenticationProvider","instance","account","getActiveAccount","interactionType","InteractionType","Popup","useEffect","displayName","email","mail","userPrincipalName","timeFormat","mailboxSettings","checkUser","loginPopup","prompt","logoutPopup","useProvideAppContext","Provider","ErrorMessage","app","Alert","variant","dismissible","onClose","className","UserAvatar","props","src","avatar","alt","style","width","NavBar","Navbar","bg","expand","fixed","Container","Brand","href","Toggle","Collapse","Nav","navbar","NavItem","to","exact","Link","target","NavDropdown","title","id","align","Dropdown","Divider","Item","onClick","Welcome","fluid","Button","color","formatMap","formatDateTime","dateTime","parsedDate","parseISO","format","DateCell","rowSpan","length","date","CalendarDayRow","rowClass","getDay","Fragment","map","index","start","end","subject","organizer","emailAddress","name","Calendar","setEvents","ianaTimeZones","findIana","valueOf","loadEvents","weekStart","weekEnd","Table","size","filter","add","days","NewEvent","setSubject","attendees","setAttendees","setStart","setEnd","body","setBody","formDisabled","setFormDisabled","redirect","setRedirect","doCreate","attendeeEmails","split","attendeeArray","forEach","address","contentType","content","JSON","stringify","Form","Group","Label","Control","type","onChange","ev","placeholder","Row","Col","as","height","disabled","App","pca","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","msalInstance","PublicClientApplication","clientId","cache","cacheLocation","storeAuthStateInCookie","accounts","getAllAccounts","setActiveAccount","addEventCallback","eventType","EventType","LOGIN_SUCCESS","payload","authResult","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0419d2c.chunk.js","sourcesContent":["const config = {\n  appId: '544352e1-ab72-455c-afad-f2e10ca0f19c',\n  redirectUri: 'http://localhost:3000',\n  scopes: [\n    'user.read',\n    'mailboxsettings.read',\n    'calendars.readwrite'\n  ]\n};\n\nexport default config;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// <GetUserSnippet>\nimport { Client, GraphRequestOptions, PageCollection, PageIterator } from '@microsoft/microsoft-graph-client';\nimport { AuthCodeMSALBrowserAuthenticationProvider } from '@microsoft/microsoft-graph-client/authProviders/authCodeMsalBrowser';\nimport { endOfWeek, startOfWeek } from 'date-fns';\nimport { zonedTimeToUtc } from 'date-fns-tz';\nimport { User, Event } from 'microsoft-graph';\n\nlet graphClient: Client | undefined = undefined;\n\nfunction ensureClient(authProvider: AuthCodeMSALBrowserAuthenticationProvider) {\n  if (!graphClient) {\n    graphClient = Client.initWithMiddleware({\n      authProvider: authProvider\n    });\n  }\n\n  return graphClient;\n}\n\nexport async function getUser(authProvider: AuthCodeMSALBrowserAuthenticationProvider): Promise<User> {\n  ensureClient(authProvider);\n\n  // Return the /me API endpoint result as a User object\n  const user: User = await graphClient!.api('/me')\n    // Only retrieve the specific fields needed\n    .select('displayName,mail,mailboxSettings,userPrincipalName')\n    .get();\n\n  return user;\n}\n// </GetUserSnippet>\n\n// <GetUserWeekCalendarSnippet>\nexport async function getUserWeekCalendar(authProvider: AuthCodeMSALBrowserAuthenticationProvider,\n                                          timeZone: string): Promise<Event[]> {\n  ensureClient(authProvider);\n\n  // Generate startDateTime and endDateTime query params\n  // to display a 7-day window\n  const now = new Date();\n  const startDateTime = zonedTimeToUtc(startOfWeek(now), timeZone).toISOString();\n  const endDateTime = zonedTimeToUtc(endOfWeek(now), timeZone).toISOString();\n\n  // GET /me/calendarview?startDateTime=''&endDateTime=''\n  // &$select=subject,organizer,start,end\n  // &$orderby=start/dateTime\n  // &$top=50\n  var response: PageCollection = await graphClient!\n    .api('/me/calendarview')\n    .header('Prefer', `outlook.timezone=\"${timeZone}\"`)\n    .query({ startDateTime: startDateTime, endDateTime: endDateTime })\n    .select('subject,organizer,start,end')\n    .orderby('start/dateTime')\n    .top(25)\n    .get();\n\n  if (response[\"@odata.nextLink\"]) {\n    // Presence of the nextLink property indicates more results are available\n    // Use a page iterator to get all results\n    var events: Event[] = [];\n\n    // Must include the time zone header in page\n    // requests too\n    var options: GraphRequestOptions = {\n      headers: { 'Prefer': `outlook.timezone=\"${timeZone}\"` }\n    };\n\n    var pageIterator = new PageIterator(graphClient!, response, (event) => {\n      events.push(event);\n      return true;\n    }, options);\n\n    await pageIterator.iterate();\n\n    return events;\n  } else {\n\n    return response.value;\n  }\n}\n// </GetUserWeekCalendarSnippet>\n\n// <CreateEventSnippet>\nexport async function createEvent(authProvider: AuthCodeMSALBrowserAuthenticationProvider,\n                                  newEvent: Event): Promise<Event> {\n  ensureClient(authProvider);\n\n  // POST /me/events\n  // JSON representation of the new event is sent in the\n  // request body\n  return await graphClient!\n    .api('/me/events')\n    .post(newEvent);\n}\n// </CreateEventSnippet>\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nimport React, {\n  useContext,\n  createContext,\n  useState,\n  MouseEventHandler,\n  useEffect} from 'react';\n\nimport config from './Config';\nimport { AuthCodeMSALBrowserAuthenticationProvider } from '@microsoft/microsoft-graph-client/authProviders/authCodeMsalBrowser';\nimport { InteractionType, PublicClientApplication } from '@azure/msal-browser';\nimport { useMsal } from '@azure/msal-react';\nimport { getUser } from './GraphService';\n\n// <AppContextSnippet>\nexport interface AppUser {\n  displayName?: string,\n  email?: string,\n  avatar?: string,\n  timeZone?: string,\n  timeFormat?: string\n};\n\nexport interface AppError {\n  message: string,\n  debug?: string\n};\n\ntype AppContext = {\n  user?: AppUser;\n  error?: AppError;\n  signIn?: MouseEventHandler<HTMLElement>;\n  signOut?: MouseEventHandler<HTMLElement>;\n  displayError?: Function;\n  clearError?: Function;\n  authProvider?: AuthCodeMSALBrowserAuthenticationProvider;\n}\n\nconst appContext = createContext<AppContext>({\n  user: undefined,\n  error: undefined,\n  signIn: undefined,\n  signOut: undefined,\n  displayError: undefined,\n  clearError: undefined,\n  authProvider: undefined\n});\n\nexport function useAppContext(): AppContext {\n  return useContext(appContext);\n}\n\ninterface ProvideAppContextProps {\n  children: React.ReactNode;\n}\n\nexport default function ProvideAppContext({ children }: ProvideAppContextProps) {\n  const auth = useProvideAppContext();\n  return (\n    <appContext.Provider value={auth}>\n      {children}\n    </appContext.Provider>\n  );\n}\n// </AppContextSnippet>\n\nfunction useProvideAppContext() {\n  const [user, setUser] = useState<AppUser | undefined>(undefined);\n  const [error, setError] = useState<AppError | undefined>(undefined);\n\n  const msal = useMsal();\n\n  const displayError = (message: string, debug?: string) => {\n    setError({message, debug});\n  }\n\n  const clearError = () => {\n    setError(undefined);\n  }\n\n  // <AuthProviderSnippet>\n  // Used by the Graph SDK to authenticate API calls\n  const authProvider = new AuthCodeMSALBrowserAuthenticationProvider(\n    msal.instance as PublicClientApplication,\n    {\n      account: msal.instance.getActiveAccount()!,\n      scopes: config.scopes,\n      interactionType: InteractionType.Popup\n    }\n  );\n  // </AuthProviderSnippet>\n\n  // <UseEffectSnippet>\n  useEffect(() => {\n    const checkUser = async() => {\n      if (!user) {\n        try {\n          // Check if user is already signed in\n          const account = msal.instance.getActiveAccount();\n          if (account) {\n            // Get the user from Microsoft Graph\n            const user = await getUser(authProvider);\n\n            setUser({\n              displayName: user.displayName || '',\n              email: user.mail || user.userPrincipalName || '',\n              timeFormat: user.mailboxSettings?.timeFormat || 'h:mm a',\n              timeZone: user.mailboxSettings?.timeZone || 'UTC'\n            });\n          }\n        } catch (err: any) {\n          displayError(err.message);\n        }\n      }\n    };\n    checkUser();\n  });\n  // </UseEffectSnippet>\n\n  // <SignInSnippet>\n  const signIn = async () => {\n    await msal.instance.loginPopup({\n      scopes: config.scopes,\n      prompt: 'select_account'\n    });\n\n    // Get the user from Microsoft Graph\n    const user = await getUser(authProvider);\n\n    setUser({\n      displayName: user.displayName || '',\n      email: user.mail || user.userPrincipalName || '',\n      timeFormat: user.mailboxSettings?.timeFormat || '',\n      timeZone: user.mailboxSettings?.timeZone || 'UTC'\n    });\n  };\n  // </SignInSnippet>\n\n  // <SignOutSnippet>\n  const signOut = async () => {\n    await msal.instance.logoutPopup();\n    setUser(undefined);\n  };\n  // </SignOutSnippet>\n\n  return {\n    user,\n    error,\n    signIn,\n    signOut,\n    displayError,\n    clearError,\n    authProvider\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// <ErrorMessageSnippet>\nimport { Alert } from 'react-bootstrap';\nimport { useAppContext } from './AppContext';\n\nexport default function ErrorMessage() {\n  const app = useAppContext();\n\n  if (app.error) {\n    return (\n      <Alert variant=\"danger\" dismissible onClose={() => app.clearError!()}>\n        <p className=\"mb-3\">{app.error.message}</p>\n        { app.error.debug ?\n          <pre className=\"alert-pre border bg-light p-2\"><code>{app.error.debug}</code></pre>\n          : null\n        }\n      </Alert>\n    );\n  }\n\n  return null;\n}\n// </ErrorMessageSnippet>\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// <NavBarSnippet>\nimport { NavLink as RouterNavLink } from 'react-router-dom';\nimport {\n  Container,\n  Dropdown,\n  Navbar,\n  Nav,\n  NavDropdown,\n  NavItem\n} from 'react-bootstrap';\nimport { AuthenticatedTemplate, UnauthenticatedTemplate } from '@azure/msal-react';\n\nimport { AppUser, useAppContext } from './AppContext';\n\ninterface UserAvatarProps {\n  user: AppUser\n};\n\nfunction UserAvatar(props: UserAvatarProps) {\n  // If a user avatar is available, return an img tag with the pic\n  return <img\n      src={props.user.avatar || '/images/no-profile-photo.png'} alt=\"user\"\n      className=\"rounded-circle align-self-center mr-2\"\n      style={{ width: '32px' }}></img>;\n}\n\nexport default function NavBar() {\n  const app = useAppContext();\n  const user = app.user || { displayName: '', email: '' };\n\n  return (\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" fixed=\"top\">\n        <Container>\n          <Navbar.Brand href=\"/\">Calibre Collaborate</Navbar.Brand>\n          <Navbar.Toggle />\n          <Navbar.Collapse>\n            <Nav className=\"me-auto\" navbar>\n              <NavItem>\n                <RouterNavLink to=\"/\" className=\"nav-link\" exact>Home</RouterNavLink>\n              </NavItem>\n              <AuthenticatedTemplate>\n                <NavItem>\n                  <RouterNavLink to=\"/calendar\" className=\"nav-link\" exact>Calendar</RouterNavLink>\n                </NavItem>\n              </AuthenticatedTemplate>\n            </Nav>\n            <Nav className=\"ms-auto align-items-center\" navbar>\n              <NavItem>\n                <Nav.Link href=\"https://developer.microsoft.com/graph/docs/concepts/overview\" target=\"_blank\">\n                  Docs\n                </Nav.Link>\n              </NavItem>\n              <AuthenticatedTemplate>\n                <NavDropdown title={<UserAvatar user={user} />} id=\"user-dropdown\" align=\"end\">\n                  <h5 className=\"dropdown-item-text mb-0\">{user.displayName}</h5>\n                  <p className=\"dropdown-item-text text-muted mb-0\">{user.email}</p>\n                  <Dropdown.Divider />\n                  <Dropdown.Item onClick={app.signOut!}>Sign Out</Dropdown.Item>\n                </NavDropdown>\n              </AuthenticatedTemplate>\n              <UnauthenticatedTemplate>\n                <NavItem>\n                  <Nav.Link\n                    onClick={app.signIn!}>Sign In</Nav.Link>\n                </NavItem>\n              </UnauthenticatedTemplate>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n  );\n}\n// </NavBarSnippet>\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// <WelcomeSnippet>\nimport {\n  Button,\n  Container\n} from 'react-bootstrap';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { AuthenticatedTemplate, UnauthenticatedTemplate } from '@azure/msal-react';\nimport { useAppContext } from './AppContext';\nimport './App.css';\n\nexport default function Welcome(props: RouteComponentProps) {\n  const app = useAppContext();\n\n  return (\n    <div className=\"p-5 mb-4  rounded-3\">\n      <Container fluid>\n        <h1>Calibre Collaborate  </h1>\n        <p className=\"lead\">\n        now lets get started on scheduling a meeting\n        </p>\n        <AuthenticatedTemplate>\n          <div>\n            <h4>Welcome {app.user?.displayName || ''}!</h4>\n            <p></p>\n          </div>\n        </AuthenticatedTemplate>\n        <UnauthenticatedTemplate>\n          <Button color=\"primary\" onClick={app.signIn!}>Click here to sign in</Button>\n        </UnauthenticatedTemplate>\n      </Container>\n    </div>\n  );\n}\n// </WelcomeSnippet>\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// <CalendarDayRowSnippet>\nimport React from 'react';\nimport { Event } from 'microsoft-graph';\nimport { format } from 'date-fns';\nimport { parseISO } from 'date-fns/esm';\n\ntype CalendarDayRowProps = {\n  date: Date,\n  timeFormat: string,\n  events: Event[]\n};\n\ninterface FormatMap {\n  [key: string] : string;\n}\n\n// date-fns format strings are slightly\n// different than the ones returned by Graph\nconst formatMap: FormatMap = {\n  \"h:mm tt\": \"h:mm a\",\n  \"hh:mm tt\": \"hh:mm a\"\n};\n\n// Helper function to format Graph date/time in the user's\n// preferred format\nfunction formatDateTime(dateTime: string | undefined, timeFormat: string) {\n  if (dateTime !== undefined) {\n    const parsedDate = parseISO(dateTime);\n    return format(parsedDate, formatMap[timeFormat] || timeFormat);\n  }\n}\n\nfunction DateCell(props: CalendarDayRowProps) {\n  return (\n    <td className='calendar-view-date-cell' rowSpan={props.events.length <= 0 ? 1 : props.events.length}>\n      <div className='calendar-view-date float-left text-right'>{format(props.date, 'dd')}</div>\n      <div className='calendar-view-day'>{format(props.date, 'EEEE')}</div>\n      <div className='calendar-view-month text-muted'>{format(props.date, 'MMMM, yyyy')}</div>\n    </td>\n  );\n}\n\nexport default function CalendarDayRow(props: CalendarDayRowProps) {\n  const today = new Date();\n  const rowClass = today.getDay() === props.date.getDay() ? 'table-warning' : '';\n\n  if (props.events.length <= 0) {\n    return (\n      <tr className={rowClass}>\n        <DateCell {...props} />\n        <td></td>\n        <td></td>\n      </tr>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {props.events.map(\n        function(event: Event, index: Number) {\n          return (\n            <tr className={rowClass} key={event.id}>\n              { index === 0 && <DateCell {...props}/> }\n              <td className=\"calendar-view-timespan\">\n                <div>{formatDateTime(event.start?.dateTime, props.timeFormat)} - {formatDateTime(event.end?.dateTime, props.timeFormat)}</div>\n              </td>\n              <td>\n                <div className=\"calendar-view-subject\">{event.subject}</div>\n                <div className=\"calendar-view-organizer\">{event.organizer?.emailAddress?.name}</div>\n              </td>\n            </tr>\n          )\n        }\n      )}\n    </React.Fragment>\n  );\n}\n// </CalendarDayRowSnippet>\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { useEffect, useState } from 'react';\nimport { NavLink as RouterNavLink, RouteComponentProps } from 'react-router-dom';\nimport { Table } from 'react-bootstrap';\nimport { findIana } from 'windows-iana';\nimport { Event } from 'microsoft-graph';\nimport { AuthenticatedTemplate } from '@azure/msal-react';\nimport { add, format, getDay, parseISO } from 'date-fns';\nimport { endOfWeek, startOfWeek } from 'date-fns/esm';\n\nimport { getUserWeekCalendar } from './GraphService';\nimport { useAppContext } from './AppContext';\nimport CalendarDayRow from './CalendarDayRow';\nimport './Calendar.css';\n\nexport default function Calendar(props: RouteComponentProps) {\n  const app = useAppContext();\n\n  const [events, setEvents] = useState<Event[]>();\n\n  useEffect(() => {\n    const loadEvents = async() => {\n      if (app.user && !events) {\n        try {\n          const ianaTimeZones = findIana(app.user?.timeZone!);\n          const events = await getUserWeekCalendar(app.authProvider!, ianaTimeZones[0].valueOf());\n          setEvents(events);\n        } catch (err: any) {\n          app.displayError!(err.message);\n        }\n      }\n    };\n\n    loadEvents();\n  });\n\n  // <ReturnSnippet>\n  const weekStart = startOfWeek(new Date());\n  const weekEnd = endOfWeek(weekStart);\n\n  return (\n    <AuthenticatedTemplate>\n      <div className=\"mb-3\">\n        <h1 className=\"mb-3\">{format(weekStart, 'MMMM d, yyyy')} - {format(weekEnd, 'MMMM d, yyyy')}</h1>\n        <RouterNavLink to=\"/newevent\" className=\"btn btn-light btn-sm\" exact>New event</RouterNavLink>\n      </div>\n      <div className=\"calendar-week\">\n        <div className=\"table-responsive\">\n          { events && <Table size=\"sm\">\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Time</th>\n                <th>Event</th>\n              </tr>\n            </thead>\n            <tbody>\n              <CalendarDayRow\n                date={weekStart}\n                timeFormat={app.user?.timeFormat!}\n                events={events!.filter(event => getDay(parseISO(event.start?.dateTime!)) === 0) } />\n              <CalendarDayRow\n                date={add(weekStart, { days: 1 })}\n                timeFormat={app.user?.timeFormat!}\n                events={events!.filter(event => getDay(parseISO(event.start?.dateTime!)) === 1) } />\n              <CalendarDayRow\n                date={add(weekStart, { days: 2 })}\n                timeFormat={app.user?.timeFormat!}\n                events={events!.filter(event => getDay(parseISO(event.start?.dateTime!)) === 2) } />\n              <CalendarDayRow\n                date={add(weekStart, { days: 3 })}\n                timeFormat={app.user?.timeFormat!}\n                events={events!.filter(event => getDay(parseISO(event.start?.dateTime!)) === 3) } />\n              <CalendarDayRow\n                date={add(weekStart, { days: 4 })}\n                timeFormat={app.user?.timeFormat!}\n                events={events!.filter(event => getDay(parseISO(event.start?.dateTime!)) === 4) } />\n              <CalendarDayRow\n                date={add(weekStart, { days: 5 })}\n                timeFormat={app.user?.timeFormat!}\n                events={events!.filter(event => getDay(parseISO(event.start?.dateTime!)) === 5) } />\n              <CalendarDayRow\n                date={add(weekStart, { days: 6 })}\n                timeFormat={app.user?.timeFormat!}\n                events={events!.filter(event => getDay(parseISO(event.start?.dateTime!)) === 6) } />\n            </tbody>\n          </Table> }\n        </div>\n      </div>\n    </AuthenticatedTemplate>\n  );\n  // </ReturnSnippet>\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// <NewEventSnippet>\nimport { useEffect, useState } from 'react';\nimport { NavLink as RouterNavLink, Redirect, RouteComponentProps } from 'react-router-dom';\nimport { Button, Col, Form, Row } from 'react-bootstrap';\nimport { Attendee, Event } from 'microsoft-graph';\nimport { createEvent } from './GraphService';\nimport { useAppContext } from './AppContext';\n\nexport default function NewEvent(props: RouteComponentProps) {\n  const app = useAppContext();\n\n  const [subject, setSubject] = useState('');\n  const [attendees, setAttendees] = useState('');\n  const [start, setStart] = useState('');\n  const [end, setEnd] = useState('');\n  const [body, setBody] = useState('');\n  const [formDisabled, setFormDisabled] = useState(true);\n  const [redirect, setRedirect] = useState(false);\n\n  useEffect(() => {\n    setFormDisabled(\n      subject.length === 0 ||\n      start.length === 0 ||\n      end.length ===0);\n  }, [subject, start, end]);\n\n  const doCreate = async () => {\n    const attendeeEmails = attendees.split(';');\n    const attendeeArray: Attendee[] = [];\n\n    attendeeEmails.forEach((email) => {\n      if (email.length > 0) {\n        attendeeArray.push({\n          emailAddress: {\n            address: email\n          }\n        });\n      }\n    });\n\n    const newEvent: Event = {\n      subject: subject,\n      // Only add if there are attendees\n      attendees: attendeeArray.length > 0 ? attendeeArray : undefined,\n      // Specify the user's time zone so\n      // the start and end are set correctly\n      start: {\n        dateTime: start,\n        timeZone: app.user?.timeZone\n      },\n      end: {\n        dateTime: end,\n        timeZone: app.user?.timeZone\n      },\n      // Only add if a body was given\n      body: body.length > 0 ? {\n        contentType: 'text',\n        content: body\n      } : undefined\n    };\n\n    try {\n      await createEvent(app.authProvider!, newEvent);\n      setRedirect(true);\n    } catch (err) {\n      app.displayError!('Error creating event', JSON.stringify(err));\n    }\n  };\n\n  if (redirect) {\n    return <Redirect to=\"/calendar\" />\n  }\n\n  return(\n    <Form>\n      <Form.Group>\n        <Form.Label>Subject</Form.Label>\n        <Form.Control type=\"text\"\n          name=\"subject\"\n          id=\"subject\"\n          className=\"mb-2\"\n          value={subject}\n          onChange={(ev) => setSubject(ev.target.value) } />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Attendees</Form.Label>\n        <Form.Control type=\"text\"\n          name=\"attendees\"\n          id=\"attendees\"\n          className=\"mb-2\"\n          placeholder=\"Enter a list of email addresses, seperated by a semi-colon\"\n          value={attendees}\n          onChange={(ev) => setAttendees(ev.target.value) } />\n      </Form.Group>\n      <Row className=\"mb-2\">\n        <Col>\n          <Form.Group>\n            <Form.Label>Start</Form.Label>\n            <Form.Control type=\"datetime-local\"\n              name=\"start\"\n              id=\"start\"\n              value={start}\n              onChange={(ev) => setStart(ev.target.value) } />\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Group>\n            <Form.Label>End</Form.Label>\n            <Form.Control type=\"datetime-local\"\n              name=\"end\"\n              id=\"end\"\n              value={end}\n              onChange={(ev) => setEnd(ev.target.value) } />\n          </Form.Group>\n        </Col>\n      </Row>\n      <Form.Group>\n        <Form.Label>Body</Form.Label>\n        <Form.Control as=\"textarea\"\n          name=\"body\"\n          id=\"body\"\n          className=\"mb-3\"\n          style={{ height: '10em' }}\n          value={body}\n          onChange={(ev) => setBody(ev.target.value) } />\n      </Form.Group>\n      <Button color=\"primary\"\n        className=\"me-2\"\n        disabled={formDisabled}\n        onClick={() => doCreate()}>Create</Button>\n      <RouterNavLink to=\"/calendar\"\n        className=\"btn btn-secondary\"\n        exact>Cancel</RouterNavLink>\n    </Form>\n  );\n}\n// </NewEventSnippet>\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport { MsalProvider } from '@azure/msal-react'\nimport { IPublicClientApplication } from '@azure/msal-browser';\n\nimport ProvideAppContext from './AppContext';\nimport ErrorMessage from './ErrorMessage';\nimport NavBar from './NavBar';\nimport Welcome from './Welcome';\nimport Calendar from './Calendar';\nimport NewEvent from './NewEvent';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n// <AppPropsSnippet>\ntype AppProps= {\n  pca: IPublicClientApplication\n};\n// </AppPropsSnippet>\n\nexport default function App({ pca }: AppProps) {\n  // <ReturnSnippet>\n  return(\n    <MsalProvider instance={ pca }>\n      <ProvideAppContext>\n        <Router>\n          <NavBar />\n          <Container>\n            <ErrorMessage />\n            <Route exact path=\"/\"\n              render={(props) =>\n                <Welcome {...props} />\n              } />\n            <Route exact path=\"/calendar\"\n              render={(props) =>\n                <Calendar {...props} />\n              } />\n            <Route exact path=\"/newevent\"\n              render={(props) =>\n                <NewEvent {...props} />\n              } />\n          </Container>\n        </Router>\n      </ProvideAppContext>\n    </MsalProvider>\n  );\n  // </ReturnSnippet>\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  PublicClientApplication,\n  EventType,\n  EventMessage,\n  AuthenticationResult } from '@azure/msal-browser';\n\nimport config from './Config';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// <MsalInstanceSnippet>\nconst msalInstance = new PublicClientApplication({\n  auth: {\n    clientId: config.appId,\n    redirectUri: config.redirectUri\n  },\n  cache: {\n    cacheLocation: 'sessionStorage',\n    storeAuthStateInCookie: true\n  }\n});\n\n// Check if there are already accounts in the browser session\n// If so, set the first account as the active account\nconst accounts = msalInstance.getAllAccounts();\nif (accounts && accounts.length > 0) {\n  msalInstance.setActiveAccount(accounts[0]);\n}\n\nmsalInstance.addEventCallback((event: EventMessage) => {\n  if (event.eventType === EventType.LOGIN_SUCCESS && event.payload) {\n    // Set the active account - this simplifies token acquisition\n    const authResult = event.payload as AuthenticationResult;\n    msalInstance.setActiveAccount(authResult.account);\n  }\n});\n// </MsalInstanceSnippet>\n\n// <RenderSnippet>\nReactDOM.render(\n  <React.StrictMode>\n    <App pca = { msalInstance }/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// </RenderSnippet>\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}